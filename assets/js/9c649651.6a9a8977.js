"use strict";(self.webpackChunkexpenses_docs=self.webpackChunkexpenses_docs||[]).push([[3858],{3423:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>t,metadata:()=>c,toc:()=>h});const c=JSON.parse('{"id":"HLD/Microservices/AccountsMS PRD","title":"AccountsMS PRD","description":"Here\u2019s a detailed Project Requirement Specification document for the Accounts Microservice (e.g., bank, wallet, credit card accounts) implemented using Spring Boot (Spring MVC, non-reactive).","source":"@site/docs/HLD/Microservices/AccountsMS PRD.md","sourceDirName":"HLD/Microservices","slug":"/HLD/Microservices/AccountsMS PRD","permalink":"/expenses-docs/docs/HLD/Microservices/AccountsMS PRD","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/HLD/Microservices/AccountsMS PRD.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Microservices","permalink":"/expenses-docs/docs/HLD/Microservices/"},"next":{"title":"Budgets MS PRD","permalink":"/expenses-docs/docs/HLD/Microservices/Budgets MS PRD"}}');var i=s(4848),r=s(8453);const t={},d=void 0,l={},h=[{value:"\ud83e\uddfe Project Specification: <strong>Accounts Microservice</strong>",id:"-project-specification-accounts-microservice",level:2},{value:"\ud83d\udd27 Tech Stack",id:"-tech-stack",level:3},{value:"\ud83c\udfaf Purpose",id:"-purpose",level:2},{value:"\ud83d\udce6 Modules",id:"-modules",level:2},{value:"\ud83d\udcda Database Schema (PostgreSQL)",id:"-database-schema-postgresql",level:2},{value:"1. <code>accounts</code>",id:"1-accounts",level:3},{value:"\ud83d\udcd8 Accounts Microservice \u2013 Project Specification",id:"-accounts-microservice--project-specification",level:2},{value:"\ud83d\udccc Purpose",id:"-purpose-1",level:3},{value:"\ud83d\udd27 Tech Stack",id:"-tech-stack-1",level:2},{value:"\ud83d\udd10 Security &amp; Access",id:"-security--access",level:2},{value:"\ud83e\udde0 Responsibilities",id:"-responsibilities",level:2},{value:"\ud83d\udd04 Inter-Service Communication",id:"-inter-service-communication",level:2},{value:"\ud83d\uddc3\ufe0f Database Schema (PostgreSQL)",id:"\ufe0f-database-schema-postgresql",level:2},{value:"Table: <code>accounts</code>",id:"table-accounts",level:3},{value:"Table: <code>account_type</code>",id:"table-account_type",level:3},{value:"Table: <code>account_details</code>",id:"table-account_details",level:3},{value:"\ud83d\udd01 Caching",id:"-caching",level:2},{value:"\ud83d\udce1 REST API Specification",id:"-rest-api-specification",level:2},{value:"\ud83e\uddea Unit Testing",id:"-unit-testing",level:2},{value:"\ud83d\udcca Observability",id:"-observability",level:2},{value:"\ud83e\uddf1 Spring Boot Features Used",id:"-spring-boot-features-used",level:2},{value:"\u2705 Code Quality &amp; Style",id:"-code-quality--style",level:2},{value:"\u2705 Example Checkstyle Config (Google Style)",id:"-example-checkstyle-config-google-style",level:3},{value:"\ud83d\udd10 Secrets &amp; Configuration",id:"-secrets--configuration",level:2},{value:"\ud83d\udce4 Kafka Events",id:"-kafka-events",level:2},{value:"\ud83d\udd0c Integration with Other Microservices",id:"-integration-with-other-microservices",level:2}];function o(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Here\u2019s a detailed ",(0,i.jsx)(n.strong,{children:"Project Requirement Specification"})," document for the ",(0,i.jsx)(n.strong,{children:"Accounts Microservice"})," (e.g., bank, wallet, credit card accounts) implemented using ",(0,i.jsx)(n.strong,{children:"Spring Boot (Spring MVC, non-reactive)"}),"."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"-project-specification-accounts-microservice",children:["\ud83e\uddfe Project Specification: ",(0,i.jsx)(n.strong,{children:"Accounts Microservice"})]}),"\n",(0,i.jsx)(n.h3,{id:"-tech-stack",children:"\ud83d\udd27 Tech Stack"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Layer"}),(0,i.jsx)(n.th,{children:"Technology"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Framework"}),(0,i.jsx)(n.td,{children:"Spring Boot (Spring MVC)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Database"}),(0,i.jsx)(n.td,{children:"PostgreSQL"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Caching"}),(0,i.jsx)(n.td,{children:"Spring Cache + Redis"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Messaging"}),(0,i.jsx)(n.td,{children:"Kafka"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"API Security"}),(0,i.jsx)(n.td,{children:"JWT + HTTPS"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Configuration"}),(0,i.jsx)(n.td,{children:"Spring Cloud Config"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Secrets Management"}),(0,i.jsx)(n.td,{children:"HashiCorp Vault"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Observability"}),(0,i.jsx)(n.td,{children:"Prometheus + Grafana"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Deployment"}),(0,i.jsx)(n.td,{children:"Docker + Kubernetes"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-purpose",children:"\ud83c\udfaf Purpose"}),"\n",(0,i.jsx)(n.p,{children:"Manages accounts such as:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bank accounts (Savings/Current)"}),"\n",(0,i.jsx)(n.li,{children:"Credit card accounts"}),"\n",(0,i.jsx)(n.li,{children:"Loan accounts"}),"\n",(0,i.jsx)(n.li,{children:"Investment accounts"}),"\n",(0,i.jsx)(n.li,{children:"Wallets (optional)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-modules",children:"\ud83d\udce6 Modules"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Account Management"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Account Type Registry"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Account Details (polymorphic sub-types)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"User-to-Account Mapping"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Kafka Event Publishing"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Cache for account metadata (e.g., account types)"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-database-schema-postgresql",children:"\ud83d\udcda Database Schema (PostgreSQL)"}),"\n",(0,i.jsxs)(n.h3,{id:"1-accounts",children:["1. ",(0,i.jsx)(n.code,{children:"accounts"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"account_number UUID PRIMARY KEY,\r\naccount_name VARCHAR(20),\r\ninstitution_name VARCHAR(50),\r\naccount_type_id INT REFERENCES account\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here\u2019s the ",(0,i.jsx)(n.strong,{children:"complete project requirement specification"})," for the ",(0,i.jsx)(n.strong,{children:"Accounts Microservice"}),", implemented using ",(0,i.jsx)(n.strong,{children:"Spring Boot (non-reactive Spring MVC)"}),", with suggestions for ",(0,i.jsx)(n.strong,{children:"code styling enforcement using Checkstyle"})," and other good practices:"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-accounts-microservice--project-specification",children:"\ud83d\udcd8 Accounts Microservice \u2013 Project Specification"}),"\n",(0,i.jsx)(n.h3,{id:"-purpose-1",children:"\ud83d\udccc Purpose"}),"\n",(0,i.jsx)(n.p,{children:"To manage various types of accounts like:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Savings / Current Bank Accounts"}),"\n",(0,i.jsx)(n.li,{children:"Credit Card Accounts"}),"\n",(0,i.jsx)(n.li,{children:"Loan Accounts"}),"\n",(0,i.jsx)(n.li,{children:"Investment Accounts (e.g., stocks, bonds)"}),"\n",(0,i.jsx)(n.li,{children:"Digital Wallets"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-tech-stack-1",children:"\ud83d\udd27 Tech Stack"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Layer"}),(0,i.jsx)(n.th,{children:"Technology"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Language"}),(0,i.jsx)(n.td,{children:"Java 17+"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Framework"}),(0,i.jsx)(n.td,{children:"Spring Boot (Spring MVC)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Database"}),(0,i.jsx)(n.td,{children:"PostgreSQL"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Messaging"}),(0,i.jsx)(n.td,{children:"Apache Kafka"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Cache"}),(0,i.jsx)(n.td,{children:"Spring Cache + Redis"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"API Security"}),(0,i.jsx)(n.td,{children:"JWT + HTTPS"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Configuration"}),(0,i.jsx)(n.td,{children:"Spring Cloud Config"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Secret Management"}),(0,i.jsx)(n.td,{children:"HashiCorp Vault"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Observability"}),(0,i.jsx)(n.td,{children:"Prometheus + Grafana + Loki"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"API Documentation"}),(0,i.jsx)(n.td,{children:"SpringDoc OpenAPI (Swagger)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Code Style"}),(0,i.jsx)(n.td,{children:"Checkstyle + Google Java Format"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Linting/Static Analysis"}),(0,i.jsx)(n.td,{children:"PMD + SpotBugs"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Containerization"}),(0,i.jsx)(n.td,{children:"Docker"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Orchestration"}),(0,i.jsx)(n.td,{children:"Kubernetes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Unit Testing"}),(0,i.jsx)(n.td,{children:"JUnit 5 + Mockito + Testcontainers"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-security--access",children:"\ud83d\udd10 Security & Access"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"JWT for authentication"}),"\n",(0,i.jsx)(n.li,{children:"Role-based access control (e.g., USER, ADMIN)"}),"\n",(0,i.jsx)(n.li,{children:"HTTPS via TLS termination at ingress (e.g., NGINX)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-responsibilities",children:"\ud83e\udde0 Responsibilities"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create/update/soft-delete accounts"}),"\n",(0,i.jsx)(n.li,{children:"Store detailed financial info depending on account type"}),"\n",(0,i.jsx)(n.li,{children:"Fetch accounts by user"}),"\n",(0,i.jsx)(n.li,{children:"Map accounts to user via another microservice"}),"\n",(0,i.jsxs)(n.li,{children:["Send Kafka events: ",(0,i.jsx)(n.code,{children:"ACCOUNT_CREATED"}),", ",(0,i.jsx)(n.code,{children:"ACCOUNT_UPDATED"}),", ",(0,i.jsx)(n.code,{children:"ACCOUNT_CLOSED"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-inter-service-communication",children:"\ud83d\udd04 Inter-Service Communication"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Target Microservice"}),(0,i.jsx)(n.th,{children:"Protocol"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"User Microservice"}),(0,i.jsx)(n.td,{children:"REST"}),(0,i.jsx)(n.td,{children:"Validate user existence"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Budget Microservice"}),(0,i.jsx)(n.td,{children:"Kafka"}),(0,i.jsx)(n.td,{children:"Notify budgets of new/closed accounts"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Expense Microservice"}),(0,i.jsx)(n.td,{children:"REST"}),(0,i.jsx)(n.td,{children:"Account validation for expense creation"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-database-schema-postgresql",children:"\ud83d\uddc3\ufe0f Database Schema (PostgreSQL)"}),"\n",(0,i.jsxs)(n.h3,{id:"table-accounts",children:["Table: ",(0,i.jsx)(n.code,{children:"accounts"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Column"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_number"})}),(0,i.jsx)(n.td,{children:"UUID (PK)"}),(0,i.jsx)(n.td,{children:"Unique identifier for account"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_name"})}),(0,i.jsx)(n.td,{children:"VARCHAR(20)"}),(0,i.jsx)(n.td,{children:"Name of the account"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"institution_name"})}),(0,i.jsx)(n.td,{children:"VARCHAR(50)"}),(0,i.jsx)(n.td,{children:"Bank/Institution name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_type_id"})}),(0,i.jsx)(n.td,{children:"INT"}),(0,i.jsxs)(n.td,{children:["FK to ",(0,i.jsx)(n.code,{children:"account_type"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_status"})}),(0,i.jsx)(n.td,{children:"ENUM"}),(0,i.jsx)(n.td,{children:"OPEN, CLOSED, OPENING, CLOSING, LOCKED"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"currency"})}),(0,i.jsx)(n.td,{children:"VARCHAR(10)"}),(0,i.jsx)(n.td,{children:"Currency type (e.g., USD, INR)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"created_at"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{children:"Creation time"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"updated_at"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{children:"Last update time"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"description"})}),(0,i.jsx)(n.td,{children:"TEXT"}),(0,i.jsx)(n.td,{children:"Optional details"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"table-account_type",children:["Table: ",(0,i.jsx)(n.code,{children:"account_type"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Column"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_type_id"})}),(0,i.jsx)(n.td,{children:"INT (PK)"}),(0,i.jsx)(n.td,{children:"Auto-increment ID"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_type"})}),(0,i.jsx)(n.td,{children:"VARCHAR(50)"}),(0,i.jsx)(n.td,{children:"e.g., SAVINGS, CREDIT_CARD"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"description"})}),(0,i.jsx)(n.td,{children:"VARCHAR(100)"}),(0,i.jsx)(n.td,{children:"Human-readable description"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"created_at"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"updated_at"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"table-account_details",children:["Table: ",(0,i.jsx)(n.code,{children:"account_details"})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Column"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account_id"})}),(0,i.jsx)(n.td,{children:"UUID (PK)"}),(0,i.jsxs)(n.td,{children:["FK to ",(0,i.jsx)(n.code,{children:"accounts"})]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"interest_rate"})}),(0,i.jsx)(n.td,{children:"DECIMAL"}),(0,i.jsx)(n.td,{children:"For savings/loan/investment"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"credit_limit"})}),(0,i.jsx)(n.td,{children:"DECIMAL"}),(0,i.jsx)(n.td,{children:"Credit card only"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"loan_amount"})}),(0,i.jsx)(n.td,{children:"DECIMAL"}),(0,i.jsx)(n.td,{children:"Loan only"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"maturity_date"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{children:"Loan & Investment"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"investment_type"})}),(0,i.jsx)(n.td,{children:"VARCHAR"}),(0,i.jsx)(n.td,{children:"e.g., STOCKS, BONDS"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"created_at"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"updated_at"})}),(0,i.jsx)(n.td,{children:"TIMESTAMP"}),(0,i.jsx)(n.td,{})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-caching",children:"\ud83d\udd01 Caching"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Redis + Spring Cache"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cache account types and institution info"}),"\n",(0,i.jsx)(n.li,{children:"TTL: 24 hours, invalidated on update via cache eviction"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-rest-api-specification",children:"\ud83d\udce1 REST API Specification"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{children:"Endpoint"}),(0,i.jsx)(n.th,{children:"Description"}),(0,i.jsx)(n.th,{children:"Auth"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"POST"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/accounts"})}),(0,i.jsx)(n.td,{children:"Create a new account"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"GET"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/accounts/{accountNumber}"})}),(0,i.jsx)(n.td,{children:"Fetch account by number"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"GET"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/accounts/user/{userId}"})}),(0,i.jsx)(n.td,{children:"Paginated accounts for a user"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"PUT"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/accounts/{accountNumber}"})}),(0,i.jsx)(n.td,{children:"Update account"}),(0,i.jsx)(n.td,{children:"\u2705"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DELETE"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"/accounts/{accountNumber}"})}),(0,i.jsx)(n.td,{children:"Soft delete account"}),(0,i.jsx)(n.td,{children:"\u2705"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-unit-testing",children:"\ud83e\uddea Unit Testing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"JUnit 5"}),", ",(0,i.jsx)(n.strong,{children:"Mockito"}),", ",(0,i.jsx)(n.strong,{children:"Testcontainers"})]}),"\n",(0,i.jsx)(n.li,{children:"Mock REST clients to other services"}),"\n",(0,i.jsx)(n.li,{children:"Integration test for repository and Kafka layers"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-observability",children:"\ud83d\udcca Observability"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tool"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Prometheus"}),(0,i.jsx)(n.td,{children:"Metrics"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Grafana"}),(0,i.jsx)(n.td,{children:"Dashboards"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Loki"}),(0,i.jsx)(n.td,{children:"Log aggregation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Sleuth + Zipkin or OpenTelemetry"}),(0,i.jsx)(n.td,{children:"Tracing"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-spring-boot-features-used",children:"\ud83e\uddf1 Spring Boot Features Used"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Spring MVC + Spring Data JPA"}),"\n",(0,i.jsx)(n.li,{children:"Spring Kafka for async messaging"}),"\n",(0,i.jsx)(n.li,{children:"Spring Cache for caching"}),"\n",(0,i.jsx)(n.li,{children:"Spring Actuator for health/metrics"}),"\n",(0,i.jsx)(n.li,{children:"Spring Security with JWT"}),"\n",(0,i.jsx)(n.li,{children:"Spring Cloud Config for config centralization"}),"\n",(0,i.jsx)(n.li,{children:"Spring Retry (if needed)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-code-quality--style",children:"\u2705 Code Quality & Style"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tool"}),(0,i.jsx)(n.th,{children:"Purpose"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Checkstyle"}),(0,i.jsx)(n.td,{children:"Enforce code formatting"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Google Java Format"}),(0,i.jsx)(n.td,{children:"Auto-formatting"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"PMD"}),(0,i.jsx)(n.td,{children:"Code rule enforcement"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SpotBugs"}),(0,i.jsx)(n.td,{children:"Static analysis"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SonarQube"}),(0,i.jsx)(n.td,{children:"Overall quality gate (optional setup)"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"-example-checkstyle-config-google-style",children:"\u2705 Example Checkstyle Config (Google Style)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add ",(0,i.jsx)(n.code,{children:"checkstyle.xml"})," with Google rules or custom rules."]}),"\n",(0,i.jsx)(n.li,{children:"Integrate via Maven plugin or IDE plugin (e.g., IntelliJ, VS Code)."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-secrets--configuration",children:"\ud83d\udd10 Secrets & Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spring Cloud Config"})," for central configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vault"})," for storing DB passwords, API keys"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:".properties"})," per profile (dev/test/prod)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-kafka-events",children:"\ud83d\udce4 Kafka Events"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Event Type"}),(0,i.jsx)(n.th,{children:"Topic"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ACCOUNT_CREATED"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account.events"})}),(0,i.jsx)(n.td,{children:"New account creation"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ACCOUNT_UPDATED"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account.events"})}),(0,i.jsx)(n.td,{children:"Account details updated"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ACCOUNT_CLOSED"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"account.events"})}),(0,i.jsx)(n.td,{children:"Account status is closed"})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-integration-with-other-microservices",children:"\ud83d\udd0c Integration with Other Microservices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"User Microservice (REST)"}),": validate userId before account creation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Budgets Microservice (Kafka)"}),": listen to ",(0,i.jsx)(n.code,{children:"ACCOUNT_CREATED"}),", etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expenses Microservice (REST)"}),": verify account status during expense entry."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"If you'd like, I can generate the full Maven project structure, Dockerfile, or code skeleton for this microservice too."})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var c=s(6540);const i={},r=c.createContext(i);function t(e){const n=c.useContext(r);return c.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),c.createElement(r.Provider,{value:n},e.children)}}}]);