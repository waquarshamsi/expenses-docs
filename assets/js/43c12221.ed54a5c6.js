"use strict";(self.webpackChunkexpenses_docs=self.webpackChunkexpenses_docs||[]).push([[9611],{8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>c});var s=r(6540);const t={},i=s.createContext(t);function d(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:n},e.children)}},8456:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"HLD/BatchServices/StatementIngestionService","title":"StatementIngestionService","description":"Here\u2019s a complete PRD (Product Requirements Document) for your Spring Batch-based Statement Ingestion Microservice, along with:","source":"@site/docs/HLD/BatchServices/StatementIngestionService.md","sourceDirName":"HLD/BatchServices","slug":"/HLD/BatchServices/StatementIngestionService","permalink":"/expenses-docs/docs/HLD/BatchServices/StatementIngestionService","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/HLD/BatchServices/StatementIngestionService.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Translate your site","permalink":"/expenses-docs/docs/tutorial-extras/translate-your-site"},"next":{"title":"1 Camunda or Camel Use Cases","permalink":"/expenses-docs/docs/HLD/DesignDecisions/1 Camunda or Camel Use Cases"}}');var t=r(4848),i=r(8453);const d={},c=void 0,l={},o=[{value:"\ud83d\udcc4 Product Requirements Document: Bank Statement Ingestion Microservice",id:"-product-requirements-document-bank-statement-ingestion-microservice",level:2},{value:"\ud83d\udd0d <strong>Overview</strong>",id:"-overview",level:3},{value:"\ud83c\udfaf <strong>Goals</strong>",id:"-goals",level:3},{value:"\u2705 <strong>MVP Scope</strong>",id:"-mvp-scope",level:3},{value:"\ud83d\udccc Microservices:",id:"-microservices",level:4},{value:"\ud83e\uddf1 Functional Requirements",id:"-functional-requirements",level:2},{value:"1\ufe0f\u20e3 <strong>Statement Uploader Service (REST Microservice)</strong>",id:"1\ufe0f\u20e3-statement-uploader-service-rest-microservice",level:3},{value:"\u2705 Sample API:",id:"-sample-api",level:4},{value:"2\ufe0f\u20e3 <strong>Statement Ingestion Batch Service (Spring Batch)</strong>",id:"2\ufe0f\u20e3-statement-ingestion-batch-service-spring-batch",level:3},{value:"\ud83d\udd01 Batch Jobs:",id:"-batch-jobs",level:4},{value:"\ud83d\udee0 Job Parameters:",id:"-job-parameters",level:4},{value:"\ud83e\udde0 Categorization Stub:",id:"-categorization-stub",level:4},{value:"\ud83c\udfaf Integration:",id:"-integration",level:4},{value:"\ud83d\udcda Tech Stack",id:"-tech-stack",level:2},{value:"\ud83e\uddec Architecture",id:"-architecture",level:2},{value:"\ud83d\uddc3 Database Design (optional, MVP skips it)",id:"-database-design-optional-mvp-skips-it",level:2},{value:"<code>statement_uploads</code> table (optional audit log):",id:"statement_uploads-table-optional-audit-log",level:4},{value:"\ud83d\udd10 Security",id:"-security",level:2},{value:"\u2705 Best Practices for .NET/Spring Batch Microservices (Enterprise)",id:"-best-practices-for-netspring-batch-microservices-enterprise",level:2},{value:"\ud83d\ude80 AWS Deployment Options",id:"-aws-deployment-options",level:2},{value:"\ud83d\udd1c Future Enhancements",id:"-future-enhancements",level:2}];function a(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Here\u2019s a ",(0,t.jsx)(n.strong,{children:"complete PRD (Product Requirements Document)"})," for your ",(0,t.jsx)(n.strong,{children:"Spring Batch-based Statement Ingestion Microservice"}),", along with:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 MVP features and future roadmap"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Spring Batch architecture"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Microservice integration"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Deployment options (including AWS Free Tier\u2013friendly suggestions)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-product-requirements-document-bank-statement-ingestion-microservice",children:"\ud83d\udcc4 Product Requirements Document: Bank Statement Ingestion Microservice"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"-overview",children:["\ud83d\udd0d ",(0,t.jsx)(n.strong,{children:"Overview"})]}),"\n",(0,t.jsxs)(n.p,{children:["This microservice ingests monthly ",(0,t.jsx)(n.strong,{children:"bank statements"})," for multiple users in different formats (PDF, CSV, etc.), parses them using different ",(0,t.jsx)(n.code,{children:"BatchJob"}),"s, and populates ",(0,t.jsx)(n.strong,{children:"expenses via an external Expense Tracker API"}),". It supports ",(0,t.jsx)(n.strong,{children:"pluggable ingestion for different banks/providers"})," (SBI, Paytm, etc.), and later integrates with ",(0,t.jsx)(n.strong,{children:"AI-based categorization"})," services."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"-goals",children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Goals"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Allow users to upload their bank statements (PDFs, CSVs)."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Persist those files temporarily on disk/cloud storage."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Batch process these files by:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Parsing the files based on bank type"}),"\n",(0,t.jsx)(n.li,{children:"Extracting transaction data"}),"\n",(0,t.jsx)(n.li,{children:"(Optionally) enriching them via AI categorization (stub for now)"}),"\n",(0,t.jsxs)(n.li,{children:["Posting transactions to ",(0,t.jsx)(n.strong,{children:"Expenses API"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"-mvp-scope",children:["\u2705 ",(0,t.jsx)(n.strong,{children:"MVP Scope"})]}),"\n",(0,t.jsx)(n.h4,{id:"-microservices",children:"\ud83d\udccc Microservices:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Statement Uploader Service (REST)"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Statement Ingestion Batch Service (Spring Batch)"})}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-functional-requirements",children:"\ud83e\uddf1 Functional Requirements"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"1\ufe0f\u20e3-statement-uploader-service-rest-microservice",children:["1\ufe0f\u20e3 ",(0,t.jsx)(n.strong,{children:"Statement Uploader Service (REST Microservice)"})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Feature"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"POST /upload-statement"})}),(0,t.jsx)(n.td,{children:"Accepts file + metadata (user ID, bank type)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Stores file"})}),(0,t.jsxs)(n.td,{children:["Writes it to disk under a directory structure like ",(0,t.jsx)(n.code,{children:"/data/{userId}/{bank}/"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Metadata persistence"})}),(0,t.jsx)(n.td,{children:"Optionally records file info in DB for audit/logging"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"-sample-api",children:"\u2705 Sample API:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:"POST /upload-statement\r\nContent-Type: multipart/form-data\r\n\r\nBody:\r\n- file: (PDF/CSV)\r\n- userId: bob\r\n- bank: sbi\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"2\ufe0f\u20e3-statement-ingestion-batch-service-spring-batch",children:["2\ufe0f\u20e3 ",(0,t.jsx)(n.strong,{children:"Statement Ingestion Batch Service (Spring Batch)"})]}),"\n",(0,t.jsx)(n.h4,{id:"-batch-jobs",children:"\ud83d\udd01 Batch Jobs:"}),"\n",(0,t.jsxs)(n.p,{children:["Each ",(0,t.jsx)(n.strong,{children:"Bank"})," has its own Job + Step logic:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Bank"}),(0,t.jsx)(n.th,{children:"File Type"}),(0,t.jsx)(n.th,{children:"Reader"}),(0,t.jsx)(n.th,{children:"Processor"}),(0,t.jsx)(n.th,{children:"Writer"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SBI"}),(0,t.jsx)(n.td,{children:"PDF"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"PdfTransactionReader"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CategorizationProcessor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ExpenseApiWriter"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Paytm"}),(0,t.jsx)(n.td,{children:"CSV"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"FlatFileItemReader"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"CategorizationProcessor"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ExpenseApiWriter"})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"-job-parameters",children:"\ud83d\udee0 Job Parameters:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"--userId=bob"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"--bank=sbi"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"--directory=/data/bob/sbi/"})}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"-categorization-stub",children:"\ud83e\udde0 Categorization Stub:"}),"\n",(0,t.jsx)(n.p,{children:"Use a stubbed AI service endpoint like:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-http",children:'POST /categorize\r\n{\r\n  "description": "Swiggy order"\r\n}\r\n\u2192 "category": "Food"\n'})}),"\n",(0,t.jsx)(n.p,{children:"This will be replaced by actual AI categorization service later."}),"\n",(0,t.jsx)(n.h4,{id:"-integration",children:"\ud83c\udfaf Integration:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Expense Tracker API: ",(0,t.jsx)(n.code,{children:"POST /expenses"})," with transaction details and ",(0,t.jsx)(n.code,{children:"userId"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-tech-stack",children:"\ud83d\udcda Tech Stack"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Layer"}),(0,t.jsx)(n.th,{children:"Tech"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Batch Processing"}),(0,t.jsx)(n.td,{children:"Spring Batch"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Parsing PDFs"}),(0,t.jsx)(n.td,{children:"Apache PDFBox"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"CSV Reading"}),(0,t.jsx)(n.td,{children:"Spring Batch FlatFileItemReader"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"REST Calls"}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"WebClient"})," or ",(0,t.jsx)(n.code,{children:"RestTemplate"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Categorization API (Stub)"}),(0,t.jsx)(n.td,{children:"Local REST endpoint"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Upload API"}),(0,t.jsx)(n.td,{children:"Spring Boot + Multipart Support"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Auth (Future)"}),(0,t.jsx)(n.td,{children:"JWT-based"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Monitoring"}),(0,t.jsx)(n.td,{children:"Spring Boot Actuator, Micrometer (Prometheus)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Containerization"}),(0,t.jsx)(n.td,{children:"Docker"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"CI/CD"}),(0,t.jsx)(n.td,{children:"GitHub Actions (or CodePipeline later)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Storage"}),(0,t.jsx)(n.td,{children:"Local filesystem (MVP), migrate to S3 later"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Logging"}),(0,t.jsx)(n.td,{children:"SLF4J + centralized logging (MVP: file logs)"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-architecture",children:"\ud83e\uddec Architecture"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n          \u2502  Statement Uploader Service \u2502\r\n          \u2502 POST /upload-statement      \u2502\r\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                       \u2502\r\n                       \u25bc\r\n          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n          \u2502  Local File System (/data)   \u2502\r\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                       \u2502\r\n        Spring Batch runs every hour/day (or triggered manually)\r\n                       \u25bc\r\n          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n          \u2502  Statement Ingestion Batch   \u2502\r\n          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n                   \u2502         \u2502\r\n     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2510   \u250c\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\r\n     \u2502 SBI PDF Reader \u2502   \u2502 Paytm CSV \u2502\r\n     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n            \u25bc                 \u25bc\r\n  Categorization (AI stub)   ...\r\n            \u25bc\r\n     Expense Tracker API\r\n\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-database-design-optional-mvp-skips-it",children:"\ud83d\uddc3 Database Design (optional, MVP skips it)"}),"\n",(0,t.jsxs)(n.h4,{id:"statement_uploads-table-optional-audit-log",children:[(0,t.jsx)(n.code,{children:"statement_uploads"})," table (optional audit log):"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Column"}),(0,t.jsx)(n.th,{children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"id"}),(0,t.jsx)(n.td,{children:"UUID"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"user_id"}),(0,t.jsx)(n.td,{children:"STRING"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"bank"}),(0,t.jsx)(n.td,{children:"STRING"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"file_path"}),(0,t.jsx)(n.td,{children:"STRING"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"uploaded_at"}),(0,t.jsx)(n.td,{children:"TIMESTAMP"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-security",children:"\ud83d\udd10 Security"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Area"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Auth"}),(0,t.jsxs)(n.td,{children:["Use ",(0,t.jsx)(n.strong,{children:"JWT-based authentication"})," on the upload service"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"File access"}),(0,t.jsxs)(n.td,{children:["Only internal services can read ",(0,t.jsx)(n.code,{children:"/data/{user}"})]})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-best-practices-for-netspring-batch-microservices-enterprise",children:"\u2705 Best Practices for .NET/Spring Batch Microservices (Enterprise)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Split into uploader and batch components (clean separation of ingestion vs execution)"}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"Spring Batch JobRegistry"})," for registering multiple jobs dynamically"]}),"\n",(0,t.jsx)(n.li,{children:"Externalize all directory paths and user mappings via YAML or DB"}),"\n",(0,t.jsxs)(n.li,{children:["Implement ",(0,t.jsx)(n.strong,{children:"JobInstance"})," and ",(0,t.jsx)(n.strong,{children:"JobExecution"})," tracking (Spring Batch metadata tables)"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"Spring Retry + Resilience4j"})," around API calls to Expense Service"]}),"\n",(0,t.jsxs)(n.li,{children:["Add structured logging (",(0,t.jsx)(n.code,{children:"logback + MDC"}),") for user-specific logs"]}),"\n",(0,t.jsx)(n.li,{children:"Add health checks, metrics, and job completion alerts (via Slack, webhook, etc.)"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-aws-deployment-options",children:"\ud83d\ude80 AWS Deployment Options"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Option"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Free Tier?"}),(0,t.jsx)(n.th,{children:"Suitable for"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"EC2"})}),(0,t.jsx)(n.td,{children:"Manual server with Dockerized services"}),(0,t.jsx)(n.td,{children:"\u2705 (750 hrs/month t2.micro)"}),(0,t.jsx)(n.td,{children:"Good for batch and REST API"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"ECS Fargate"})}),(0,t.jsx)(n.td,{children:"Serverless container deploy"}),(0,t.jsx)(n.td,{children:"\u274c (Not always free)"}),(0,t.jsx)(n.td,{children:"Long term scalable"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Elastic Beanstalk"})}),(0,t.jsx)(n.td,{children:"Deploy Spring Boot/JARs directly"}),(0,t.jsx)(n.td,{children:"\u2705 (for 1 app)"}),(0,t.jsx)(n.td,{children:"Easier to manage than EC2"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Lambda (for batch?)"})}),(0,t.jsx)(n.td,{children:"Unfit for large files/batch processing"}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"Avoid for now"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"S3 + CloudWatch Events"})}),(0,t.jsx)(n.td,{children:"Use S3 for file store + schedule"}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"Good for future AI version"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Lightsail"})}),(0,t.jsx)(n.td,{children:"Lightweight EC2 alternative"}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"Beginner friendly"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udc49 For MVP: Use ",(0,t.jsx)(n.strong,{children:"EC2 t2.micro + EBS volume for file store + cronjob"})," to trigger batch job.\r\nLater, upgrade to ECS/EKS + S3 + SQS-based triggering."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-future-enhancements",children:"\ud83d\udd1c Future Enhancements"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Feature"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"S3 integration"}),(0,t.jsx)(n.td,{children:"Store uploaded files in S3 buckets"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AI categorization"}),(0,t.jsx)(n.td,{children:"Integrate OpenAI / custom model"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Kafka"}),(0,t.jsx)(n.td,{children:"Notify upload events for async processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"UI dashboard"}),(0,t.jsx)(n.td,{children:"For users to upload/view parsing results"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RBAC"}),(0,t.jsx)(n.td,{children:"Admin vs User vs System Roles"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Email reports"}),(0,t.jsx)(n.td,{children:"Send expense summary post batch completion"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"If you'd like, I can also:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u2705 Generate folder structure and starter code"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 YAML for Spring Batch jobs"}),"\n",(0,t.jsx)(n.li,{children:"\u2705 Dockerfile + AWS deployment guide"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Would you like me to prepare that too?"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);